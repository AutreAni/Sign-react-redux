{"version":3,"sources":["SignForm/InputField.js","SignForm/validate.js","constants/actionTypes.js","SignForm/index.js","actions/currentUser.js","Popup/index.js","App.js","reportWebVitals.js","reducers/currentUserReducer.js","store.js","index.js"],"names":["InputField","props","useState","value","setValue","className","icon","name","type","inputType","placeholder","onBlur","e","handleFocusout","onChange","target","errorMsg","validateData","Username","text","length","Password","password","match","Email","email","test","String","toLowerCase","ConfPass","document","querySelector","SAVE_CURRENT_USER","REMOVE_CURRENT_USER","SignForm","loggingin","setLoggingin","registering","setRegistering","validUsername","setValidUsername","validEmail","setValidEmail","validPassword","setValidPassword","validConfPass","setValidConfPass","wrongDataMsg","setWrongDataMsg","loading","setLoading","BASE_URL","dispatch","useDispatch","setValidData","tagName","validate","registerNewUser","data","url","fetch","method","headers","body","JSON","stringify","then","response","json","payload","catch","error","console","log","registerCurrentUser","checkUserLoginCredentials","obj","username","status","Error","setCurrentUser","err","onClick","id","onSubmit","form","closest","preventDefault","confPass","res","onFocus","faUser","faEnvelope","faLock","Popup","useSelector","state","App","currentUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ACTION_HANDLERS","action","currentUserReducer","handler","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"yPAkCeA,EA/BI,SAACC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACI,sBAAKC,UAAaJ,EAAMI,UAAY,cAApC,UACI,cAAC,IAAD,CAAiBA,UAAY,OAC5BC,KAAQL,EAAMK,OAEf,uBACAC,KAAQN,EAAMM,KACdC,KAAQP,EAAMQ,UACdC,YAAeT,EAAMS,YACrBC,OAhBW,SAACC,GAChBX,EAAMY,eAAeD,IAgBjBT,MAASA,EACTW,SAfa,SAACF,GAClBR,EAASQ,EAAEG,OAAOZ,UAgBZF,EAAMe,SACN,sBAAMX,UAAY,aAAlB,SACAJ,EAAMe,WAEH,SCDJC,EAAe,CACxBC,SA7B4B,SAACC,GAC7B,QAAKA,GACEA,EAAKC,QA4BZC,SAzB4B,SAACC,GAC7B,UAAKA,EAASC,MAAM,WACfD,EAASC,MAAM,WACfD,EAASC,MAAM,YAChBD,EAASF,OAAS,IAsBtBI,MARyB,SAACC,GAE1B,MADW,wJACDC,KAAKC,OAAOF,GAAOG,gBAO7BC,SAjB2B,SAACP,GAE5B,OAAIA,IADOQ,SAASC,cAAc,0BACZ5B,QCjBb6B,EAAoB,oBACpBC,EAAsB,sB,cC+OpBC,G,MArOE,WACb,MAAkChC,oBAAS,GAA3C,mBAAOiC,EAAP,KAAkBC,EAAlB,KACA,EAAsClC,oBAAS,GAA/C,mBAAOmC,EAAP,KAAoBC,EAApB,KACA,EAA0CpC,oBAAS,GAAnD,mBAAOqC,EAAP,KAAsBC,EAAtB,KACA,EAAoCtC,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACA,EAA0CxC,oBAAS,GAAnD,mBAAOyC,EAAP,KAAsBC,EAAtB,KACA,EAA0C1C,oBAAS,GAAnD,mBAAO2C,EAAP,KAAsBC,EAAtB,KACA,EAAwC5C,qBAAxC,mBAAO6C,EAAP,KAAqBC,EAArB,KACA,EAA8B9C,oBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACMC,EAAQ,6CACRC,EAAWC,cAwBXC,EAAe,CACjBpC,SAAUsB,EACVnB,SAAUuB,EACVpB,MAAOkB,EACPb,SAAUiB,GAGRjC,EAAiB,SAACD,GACpB,GAAyB,UAArBA,EAAEG,OAAOwC,QAAb,CACA,IAAMhD,EAAOK,EAAEG,OAAOR,KACtB,GAAKA,EAAL,CACA,IAAMiD,EAAWvC,EAAaV,GAC1B8B,GAAaiB,EAAa/C,GAAMiD,EAAS5C,EAAEG,OAAOZ,WAWpDsD,EAAkB,SAACC,GACrBN,EC9D2B,SAACM,EAAMC,GAAP,OAAe,SAAAP,GAC9CQ,MAAMD,EAAK,CACPE,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAR,GAAI,OAAIN,EAAS,CAAE5C,KAAMwB,EAAmBqC,QAASX,OAC1DY,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,ODoDnBG,CAAoBhB,EAAMP,KAGjCwB,EAA4B,SAACC,GAC/B,IAAMjB,EAAG,UAAMR,EAAN,qBAA2ByB,EAAIC,SAA/B,kBAAiDD,EAAItD,UAC9D4B,GAAW,GACXU,MAAMD,GACDO,MAAK,SAAAC,GACF,GAAwB,MAApBA,EAASW,OAET,MADA5B,GAAW,GACL,IAAI6B,MAId,OAFA7B,GAAW,GACXF,EAAgB,MACTmB,EAASC,UAEnBF,MAAK,SAAAR,GACF,IAAKA,EAAKtC,OAGN,OAFA8B,GAAW,QACXF,EAAgB,8BAGpBE,GAAW,GACXE,EC1Fc,SAACM,GAAD,MAAW,CAAClD,KAAMwB,EAAmBqC,QAASX,GD0FnDsB,CAAetB,EAAK,QAEhCY,OAAM,SAAAW,GACH/B,GAAW,GACXF,EAAgB,+BA+D5B,OACI,qBAAK3C,UAAU,aAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAW8B,EAAY,sBAAwB,eAApD,SACI,wBAAQ9B,UAAU,SACd6E,QA/IJ,YACf7C,GAAeF,IAChBE,GAAaC,GAAe,GAC3BH,GAAWC,GAAa,GAC7BY,EAAgB,MAChBR,GAAiB,GACjBE,GAAc,GACdI,GAAiB,GACjBF,GAAiB,KAsIG,qBAKJ,qBAAKvC,UAAWgC,EAAc,sBAAwB,eAAtD,SACI,wBAAQhC,UAAU,SACd6E,QA1IH,WACjB7C,IAAgBF,IACfE,GAAaC,GAAe,GAC7BH,GAAWC,GAAa,GAC5BY,EAAgB,MAChBR,GAAiB,GACjBE,GAAc,GACdI,GAAiB,GACjBF,GAAiB,KAiIG,0BAMR,uBAAMuC,GAAG,OACLC,SAtDD,SAACxE,GAChB,IAAMyE,EAAOzE,EAAEG,OAAOuE,QAAQ,QAC9B1E,EAAE2E,iBACF,IA3BkCX,EA2B9BlB,EAAO,GAMX,GALAA,EAAI,SAAe2B,EAAKnE,SAASf,MACjCuD,EAAI,MAAYrB,EAAcgD,EAAK7D,MAAMrB,MAAQ,KACjDuD,EAAI,SAAe2B,EAAKhE,SAASlB,MACjCuD,EAAI,SAAerB,EAAcgD,EAAKxD,SAAS1B,MAAQ,KAEnDgC,EAAW,CACd,IAAKuB,EAAKmB,SAASzD,SAAWsC,EAAKpC,SAASF,OAErC,YADA4B,EAAgB,4BAGhB2B,EAA0BjB,GAGlC,GAAIrB,EAAa,CACb,KAAKqB,EAAKmB,SAASzD,QAAWsC,EAAKpC,SAASF,QACpCsC,EAAKjC,MAAML,QAAWsC,EAAK8B,SAASpE,QAExC,YADA4B,EAAgB,4BAEb,KAAKT,GACJE,GACAE,GACAE,GACJ,OAlD0B+B,EAoDGlB,EAnDtCR,GAAW,GACXU,MAAM,GAAD,OAAIT,EAAJ,kBAAsByB,EAAInD,QACzByC,MAAK,SAAAuB,GAAG,OAAIA,EAAIrB,UAChBF,MAAK,SAAAR,GACF,GAAIA,EAAKtC,OAGL,OAFA8B,GAAW,QACXF,EAAgB,6CAGhBE,GAAW,GACXF,EAAgB,MAChBS,EAAgBmB,MAGvBN,OAAM,SAAAW,GACF/B,GAAW,GACXF,EAAgB,gCA8DT0C,QAvHA,SAAC9E,GACjB,GAAyB,UAArBA,EAAEG,OAAOwC,QAAb,CACA,IAAMhD,EAAOK,EAAEG,OAAOR,KACjBA,IACL+C,EAAa/C,IAAM,GACnByC,EAAgB,SAgHJ,UAIA,cAAC,EAAD,CACQ3C,UAAU,oBACVE,KAAK,WACLD,KAAMqF,IACNlF,UAAU,OACVC,YAAY,WACZG,eAAgBA,EAChBG,UAAWuB,GAAiBF,EAAc,0BAA4B,OAGzEA,EACI,cAAC,EAAD,CACGhC,UAAU,iBACVE,KAAK,QACLD,KAAMsF,IACNnF,UAAU,QACVC,YAAY,QACZG,eAAgBA,EAChBG,SAAWyB,EAA+C,KAAlC,kCACtB,KAEV,cAAC,EAAD,CACIpC,UAAU,oBACVE,KAAK,WACLD,KAAMuF,IACNpF,UAAU,WACVC,YAAY,WACZG,eAAgBA,EAChBG,UAAW2B,GAAiBN,EAAe,4GACvC,OAEPA,EACI,cAAC,EAAD,CACGhC,UAAU,6BACVE,KAAK,WACLD,KAAMuF,IACNpF,UAAU,WACVC,YAAY,mBACZG,eAAgBA,EAChBG,SAAW6B,EAA8C,KAA7B,4BAC1B,KAEV,sBAAKxC,UAAS,qBAAiB0C,IACEE,KACCZ,GACGE,GACAI,GACAF,GACAI,GAA8B,GAAZ,YANvD,UAOI,iCAASR,EAAc,WAAa,WACnCU,EAAe,mBAAG1C,UAAU,WAAb,SAAyB0C,IAAoB,oBEjN1E+C,G,MAjBD,WACV,IAAMjB,EAAWkB,aAAY,SAAAC,GAAK,OAAIA,EAAMnB,YACtCzB,EAAYC,cAKlB,OACI,sBAAKhD,UAAY,gBAAjB,UACA,0CACawE,KAEb,sBAAMK,QARS,WACf9B,EDNgC,CAAC5C,KAAMyB,KCavC,oBCEOgE,I,EAAAA,EAdf,WACE,IAAMC,EAAcH,aAAY,SAAAC,GAAK,OAAIA,KAEzC,OACE,qBAAK3F,UAAU,YAAf,SACE6F,EAGA,cAAC,EAAD,IAFA,cAAC,EAAD,OCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8BCLRO,GAAe,mBAClB3E,GAAoB,SAACgE,EAAOY,GAC3B,OAAOA,EAAOvC,WAFG,cAIlBpC,GAAsB,WACrB,OAAO,QALU,GAcN4E,EALY,WAA2B,IAA1Bb,EAAyB,uDAAjB,KAAMY,EAAW,uCAC7CE,EAAUH,EAAgBC,EAAOpG,MACvC,OAAOsG,EAASA,EAAQd,EAAOY,GAASZ,GCL3Be,EAFDC,sBAAYH,EAAoBI,8BAAoBC,0BAAgBC,OCIlFC,IAASC,OACP,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACA,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGFxF,SAASyF,eAAe,SAM1BpB,M","file":"static/js/main.088a2327.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst InputField = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const handleBlur = (e) => {\r\n        props.handleFocusout(e)\r\n    }\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className = {props.className + \" inputField\"}>\r\n            <FontAwesomeIcon className = \"icon\"\r\n             icon = {props.icon}\r\n             />\r\n            <input \r\n            name = {props.name}\r\n            type = {props.inputType} \r\n            placeholder = {props.placeholder}\r\n            onBlur = {handleBlur}\r\n            value = {value}\r\n            onChange = {handleChange}\r\n            />   \r\n             {props.errorMsg ? \r\n             (<span className = \"error__msg\">\r\n             {props.errorMsg}\r\n             </span>\r\n             ) : null}         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField\r\n","export const validateUsername = (text) => {\r\n    if (!text) return false;\r\n    return text.length;\r\n}\r\n\r\nexport const validatePassword = (password) => {\r\n    if (!password.match(/[a-z]/g) ||\r\n        !password.match(/[A-Z]/g) ||\r\n        !password.match(/[0-9]/g) ||\r\n        password.length < 8) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const validateConfirm = (password) => {\r\n    let pass = document.querySelector(\"input[name = Password]\");\r\n    if (password !== pass.value) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport const validateData = {\r\n    Username: validateUsername,\r\n    Password: validatePassword,\r\n    Email: validateEmail,\r\n    ConfPass: validateConfirm,\r\n}\r\n","export const SAVE_CURRENT_USER = \"SAVE_CURRENT_USER\";\r\nexport const REMOVE_CURRENT_USER = \"REMOVE_CURRENT_USER\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport InputField from './InputField';\r\nimport { validateData } from './validate';\r\nimport { setCurrentUser } from '../actions/currentUser';\r\nimport { useDispatch } from 'react-redux';\r\nimport { faUser, faLock, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport \"../css-modules/SignForm/style.css\";\r\nimport { registerCurrentUser } from '../actions/currentUser';\r\n\r\n\r\n\r\nconst SignForm = () => {\r\n    const [loggingin, setLoggingin] = useState(true);\r\n    const [registering, setRegistering] = useState(false);\r\n    const [validUsername, setValidUsername] = useState(true);\r\n    const [validEmail, setValidEmail] = useState(true);\r\n    const [validPassword, setValidPassword] = useState(true);\r\n    const [validConfPass, setValidConfPass] = useState(true);\r\n    const [wrongDataMsg, setWrongDataMsg] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const BASE_URL = `https://jsonplaceholder.typicode.com/users`;\r\n    const dispatch = useDispatch();\r\n\r\n    const createLoginForm = () => {\r\n        if (!registering && loggingin) return;\r\n        if (registering) setRegistering(false);\r\n        if (!loggingin) setLoggingin(true);\r\n        setWrongDataMsg(null);\r\n        setValidUsername(true);\r\n        setValidEmail(true);\r\n        setValidConfPass(true);\r\n        setValidPassword(true);\r\n    }\r\n\r\n    const createSignupForm = () => {\r\n        if (registering && !loggingin) return;\r\n        if (!registering) setRegistering(true);\r\n        if (loggingin) setLoggingin(false);\r\n        setWrongDataMsg(null);\r\n        setValidUsername(true);\r\n        setValidEmail(true);\r\n        setValidConfPass(true);\r\n        setValidPassword(true);\r\n    }\r\n\r\n    const setValidData = {\r\n        Username: setValidUsername,\r\n        Password: setValidPassword,\r\n        Email: setValidEmail,\r\n        ConfPass: setValidConfPass,\r\n    }\r\n\r\n    const handleFocusout = (e) => {\r\n        if (e.target.tagName !== \"INPUT\") return;\r\n        const name = e.target.name;\r\n        if (!name) return;\r\n        const validate = validateData[name];\r\n        if (registering) setValidData[name](validate(e.target.value));\r\n    }\r\n\r\n    const handleFocus = (e) => {\r\n        if (e.target.tagName !== \"INPUT\") return;\r\n        const name = e.target.name;\r\n        if (!name) return;\r\n        setValidData[name](true);\r\n        setWrongDataMsg(null);\r\n    }\r\n\r\n    const registerNewUser = (data) => {\r\n        dispatch(registerCurrentUser(data, BASE_URL))\r\n    }\r\n\r\n    const checkUserLoginCredentials = (obj) => {\r\n        const url = `${BASE_URL}?username=${obj.username}&email=${obj.password}`;\r\n        setLoading(true);\r\n        fetch(url)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    setLoading(false)\r\n                    throw new Error();\r\n                }\r\n                setLoading(false)\r\n                setWrongDataMsg(null);\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                if (!data.length) {\r\n                    setLoading(false);\r\n                    setWrongDataMsg(\"Wrong username or password\");\r\n                    return;\r\n                }\r\n                setLoading(false);\r\n                dispatch(setCurrentUser(data[0]))\r\n            })\r\n            .catch(err =>{ \r\n                setLoading(false);\r\n                setWrongDataMsg(\"Server is not connected\")\r\n            })\r\n    }\r\n\r\n    const checkUserRegisterCredentials = (obj) => {\r\n       setLoading(true);\r\n       fetch(`${BASE_URL}?email=${obj.email}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.length) {\r\n                    setLoading(false)\r\n                    setWrongDataMsg(\"An account with this email already exists\");\r\n                    return\r\n                } else {\r\n                    setLoading(false)\r\n                    setWrongDataMsg(null);\r\n                    registerNewUser(obj);\r\n                }\r\n            })\r\n            .catch(err =>{\r\n                 setLoading(false);\r\n                 setWrongDataMsg(\"Server is not connected\");\r\n         })\r\n\r\n    }\r\n\r\n\r\n\r\n    const formSubmit = (e) => {\r\n        const form = e.target.closest(\"form\");\r\n        e.preventDefault();\r\n        let data = {};\r\n        data[\"username\"] = form.Username.value;\r\n        data[\"email\"] = registering ? form.Email.value : null;\r\n        data[\"password\"] = form.Password.value;\r\n        data[\"confPass\"] = registering ? form.ConfPass.value : null;\r\n\r\n        if (loggingin) { \r\n         if (!data.username.length || !data.password.length) {\r\n                setWrongDataMsg(\"*All fields are required\");\r\n                return;\r\n            }else{\r\n                checkUserLoginCredentials(data);\r\n            }\r\n        }\r\n        if (registering) {\r\n            if (!data.username.length || !data.password.length\r\n                || !data.email.length || !data.confPass.length) {\r\n                setWrongDataMsg(\"*All fields are required\");\r\n                return;\r\n            } else if (!validUsername\r\n                || !validEmail\r\n                || !validPassword\r\n                || !validConfPass) {\r\n                return;\r\n            } else {\r\n                checkUserRegisterCredentials(data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sign__form\">\r\n            <div className=\"main__wrapper\">\r\n                <div className=\"inner__wrapper\">\r\n                    <div className=\"buttons__wrapper\">\r\n                        <div className={loggingin ? \"active btn__wrapper\" : \"btn__wrapper\"}>\r\n                            <button className=\"button\"\r\n                                onClick={createLoginForm}>\r\n                                Login\r\n             </button>\r\n                        </div>\r\n                        <div className={registering ? \"active btn__wrapper\" : \"btn__wrapper\"}>\r\n                            <button className=\"button\"\r\n                                onClick={createSignupForm}>\r\n                                Sign Up\r\n             </button>\r\n                        </div>\r\n                    </div>\r\n                    <form id=\"form\"\r\n                        onSubmit={formSubmit}\r\n                        onFocus={handleFocus}\r\n                    >\r\n                    <InputField\r\n                            className=\"username__wrapper\"\r\n                            name=\"Username\"\r\n                            icon={faUser}\r\n                            inputType=\"text\"\r\n                            placeholder=\"Username\"\r\n                            handleFocusout={handleFocusout}\r\n                            errorMsg={!validUsername && registering ? \"*Field can not be empty\" : null}\r\n                        />\r\n\r\n                        {registering ?\r\n                            (<InputField\r\n                                className=\"email__wrapper\"\r\n                                name=\"Email\"\r\n                                icon={faEnvelope}\r\n                                inputType=\"email\"\r\n                                placeholder=\"Email\"\r\n                                handleFocusout={handleFocusout}\r\n                                errorMsg={!validEmail ? \"*Please, insert a valid email\" : null}\r\n                            />) : null}\r\n\r\n                        <InputField\r\n                            className=\"password__wrapper\"\r\n                            name=\"Password\"\r\n                            icon={faLock}\r\n                            inputType=\"password\"\r\n                            placeholder=\"Password\"\r\n                            handleFocusout={handleFocusout}\r\n                            errorMsg={!validPassword && registering ? (\"*Password must be at least 8 characters, must contain a lowercase letter, an uppercase letter and a digit\"\r\n                            ) : null}\r\n                        />\r\n                        {registering ?\r\n                            (<InputField\r\n                                className=\"confirm__password__wrapper\"\r\n                                name=\"ConfPass\"\r\n                                icon={faLock}\r\n                                inputType=\"password\"\r\n                                placeholder=\"Confirm password\"\r\n                                handleFocusout={handleFocusout}\r\n                                errorMsg={!validConfPass ? (\"*Passwords should match\") : null}\r\n                            />) : null}\r\n\r\n                        <div className = {`sign__btn ${wrongDataMsg \r\n                                                      || loading \r\n                                                      || (registering \r\n                                                        && (!validUsername\r\n                                                         || !validPassword \r\n                                                         || !validEmail\r\n                                                         || !validConfPass)) ? \"disabled\": \"\"}`}>\r\n                            <button>{registering ? \"Register\" : \"Log In\"}</button>\r\n                            {wrongDataMsg ? <p className=\"errorMsg\">{wrongDataMsg}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignForm;\r\n\r\n\r\n","import { SAVE_CURRENT_USER, REMOVE_CURRENT_USER } from '../constants/actionTypes';\r\n\r\nexport const setCurrentUser = (data) => ({type: SAVE_CURRENT_USER, payload: data});\r\n\r\nexport const removeCurrentUser = () => ({type: REMOVE_CURRENT_USER});\r\n\r\n\r\nexport const registerCurrentUser = (data, url) => dispatch => {\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: SAVE_CURRENT_USER, payload: data }))\r\n        .catch(error => console.log(error));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { removeCurrentUser } from '../actions/currentUser'\r\nimport '../css-modules/Popup/style.css';\r\n\r\n\r\nconst Popup = () => {\r\n    const username = useSelector(state => state.username);\r\n    const dispatch  = useDispatch();\r\n    \r\n    const removeUser = () => {\r\n        dispatch(removeCurrentUser());\r\n    }\r\n    return ( \r\n        <div className = \"popup-wrapper\">\r\n        <h1>\r\n            Welcome {username}\r\n        </h1>\r\n        <span onClick = {removeUser}>x</span>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Popup;","import SignForm from './SignForm/index';\nimport Popup from './Popup/index';\nimport { useSelector } from 'react-redux'\n\n\nfunction App() {\n  const currentUser = useSelector(state => state);\n\n  return (\n    <div className=\"container\">\n    {!currentUser ?\n      <SignForm/>\n      :\n      <Popup />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SAVE_CURRENT_USER, REMOVE_CURRENT_USER } from '../constants/actionTypes';\r\n\r\nconst ACTION_HANDLERS = {\r\n  [SAVE_CURRENT_USER]: (state, action)=> {\r\n    return action.payload;\r\n  },\r\n  [REMOVE_CURRENT_USER]: () => {\r\n    return null\r\n  }\r\n}\r\n\r\nconst currentUserReducer = (state = null, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler? handler(state, action): state\r\n}\r\n\r\nexport default currentUserReducer;\r\n\r\n\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport { createStore,applyMiddleware } from 'redux';\r\nimport currentUserReducer from './reducers/currentUserReducer';\r\n\r\n\r\nconst store = createStore(currentUserReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}